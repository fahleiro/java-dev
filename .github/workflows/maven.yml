name: Java CI with Maven

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: ~/Android/Sdk
      ANDROID_SDK_ROOT: ~/Android/Sdk

    steps:  
    - name: Checkout code to mobile-automate-dev
      uses: actions/checkout@v4.1.2
      with:
        ref: mobile-automate-dev

    - name: Print current branch
      run: echo "Current branch is $(git rev-parse --abbrev-ref HEAD)"

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Install Node.js and npm
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Appium
      run: npm install -g appium

    - name: Install UiAutomator2
      run: appium driver install uiautomator2

    - name: List home directory
      run: cd && ls

    - name: Curl cmdline-tools from Android.tar.gz
      run: cd && curl -O -L https://github.com/fahleiro/actions/releases/download/android/Android.tar.gz

    - name: List home directory after curl cmdline-tools
      run: cd ~ && ls
      
    - name: Descomprimir Android.tar.gz
      run: tar -xzf ~/Android.tar.gz -C ~ && echo "Descompressão de Android concluída."

    - name: List home directory after decompress Android.tar.gz
      run: cd ~ && ls
      
    - name: List directories after unzip Android.rar
      run: find ~/Android/Sdk/cmdline-tools/latest -type d

    - name: List Android environments path system
      run: echo $ANDROID_HOME && echo $ANDROID_SDK_ROOT
      
    - name: Install Android dependencies
      run: |
        chmod +x ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager
        yes | ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools"
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "emulator"
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "build-tools;30.0.3"
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-27"
        ~/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-27;google_apis_playstore;x86"


    - name: Create Android Virtual Device (AVD)
      run: |
        ~/Android/Sdk/cmdline-tools/latest/bin/avdmanager create avd -n device-name -k "system-images;android-27;google_apis_playstore;x86" -d pixel_4
        ~/Android/Sdk/emulator -avd device-1 -port 5554 &

    - name: Validating AVD ready
      run: |
        status=$(adb devices | grep -E 'device$' | wc -l)
        while [ "$status" -eq 0 ]; do
          echo "Emulador não está online, esperando..."
          sleep 5
          status=$(adb devices | grep -E 'device$' | wc -l)
        done
        echo "Emulador está online!"

        

    - name: Print settings.xml
      run: cat $HOME/.m2/settings.xml

    - name: Set up Maven
      run: |
        echo "<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd\">
              <servers>
                <server>
                  <id>github</id>
                  <username>${{secrets.GH_ACTOR}}</username>
                  <password>${{secrets.GH_PTOKEN}}</password>
                </server>
              </servers>
            </settings>" > $HOME/.m2/settings.xml

    - name: Print settings.xml
      run: cat $HOME/.m2/settings.xml  





    - name: Start Appium server
      run: appium &

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: List directory contents
      run: cd && ls



    - name: Wait for emulator to start
      run: |
        android-wait-for-emulator
        adb devices
